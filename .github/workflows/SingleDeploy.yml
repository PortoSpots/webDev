# This is a basic workflow to help you get started with Actions

name: Single Deploy

# Controls when the workflow will run
on:
  push:
    branches:
    - production

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2
      with:
        ref: production
    
    # sets up .NET Core SDK 3.1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: 6.0.100-preview.7.21379.14
        
    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: |
        dotnet publish -c Release -o release --nologo 
        
     # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to BlazorGitHubPagesDemo
      run: sed -i 's/<base href="\/" \/>/<base href="\/BlazorGitHubPagesDemo\/" \/>/g' release/wwwroot/index.html
    
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
         
    - name: Pushes to another repository
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
          source-directory: 'release/wwwroot'
          destination-github-username: 'PortoSpots'
          destination-repository-name: 'WebPage'
          user-email: portospots@gmail.com
          commit-message: 'Test auto commit msg'
          target-branch: master
